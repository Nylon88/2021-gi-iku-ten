{"version":3,"sources":["theme/theme.ts","redux/users/selectors.ts","components/organisms/layout/Header.tsx","components/templates/HeaderLayout.tsx","components/molecules/searchCondition.tsx","components/molecules/searchInput.tsx","components/pages/searchPaper.tsx","components/atoms/divideLineSocialButton.tsx","components/atoms/twitterButton.tsx","firebase.ts","hooks/useMessage.ts","redux/users/Action.ts","redux/users/Operations.ts","components/organisms/user/loginInput.tsx","components/pages/UserLogin.tsx","components/organisms/user/registrationInput.tsx","components/pages/UserRegistration.tsx","components/router/Router.tsx","App.tsx","redux/store/InitialState.ts","redux/users/Reducers.ts","index.tsx","redux/store/Store.ts"],"names":["theme","extendTheme","styles","global","body","color","usersSelector","state","users","getUserName","createSelector","username","getUserState","isSignedIn","Header","memo","selector","useSelector","userName","LoginState","dispatch","useDispatch","mx","my","align","src","process","alt","htmlWidth","_hover","cursor","mb","bg","borderRadius","textDecoration","onClick","push","opacity","HeaderLayout","props","children","SearchCondition","title","maxW","defaultV","min","max","as","fontSize","fontWeight","size","defaultValue","ml","SearchInput","w","minW","searchPaper","thisYear","Date","getFullYear","mt","mr","Array","map","i","href","isExternal","className","data-text","data-hashtags","data-url","data-lang","DivideLineSocialButton","TwitterButton","colorScheme","leftIcon","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","useMessage","toast","useToast","showMessage","useCallback","status","duration","isClosable","position","SIGN_UP","SIGN_IN","SIGN_OUT","signUp","signUpData","getState","a","email","password","type","payload","id","userState","signIn","signInData","LoginInput","useState","showPassword","setShowPassword","useForm","errors","formState","register","handleSubmit","onSubmit","data","signInWithEmailAndPassword","alert","message","isRequired","placeholder","required","pattern","value","h","isFullWidth","UserLogin","justify","border","borderColor","p","RegistrationInput","showPass","setShowPass","showPassConf","setShowPassConf","passwordConf","createUserWithEmailAndPassword","UserRegistration","Router","exact","path","component","App","initialState","UsersReducer","action","Actions","history","History","store","reduxCreateStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13a8c3d6.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        color: \"#333333\"\n      }\n    }\n  }\n});\n\nexport default theme;","import { createSelector } from 'reselect'\n\nimport { Selector, Users } from './ActionType';\n\nconst usersSelector = (state: Selector) => state.users;\n\nexport const getUserName = createSelector(\n  [usersSelector],\n  (state: Users) => state.username\n)\n\nexport const getUserState = createSelector(\n  [usersSelector],\n  (state: Users) => state.isSignedIn\n)","import { memo, VFC } from \"react\";\nimport { Button, Flex, Image, Spacer } from \"@chakra-ui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { push } from \"connected-react-router\";\n\nimport { Selector } from \"../../../redux/users/ActionType\";\nimport { getUserName, getUserState } from \"../../../redux/users/selectors\";\n\nexport const Header:VFC = memo(() => {\n  const selector = useSelector((state: Selector) => state);\n  const userName = getUserName(selector)\n  const LoginState = getUserState(selector)\n\n  const dispatch = useDispatch();\n\n  return (\n    <Flex mx={32} my={3} align=\"flex-end\">\n      <Image\n        src={`${process.env.PUBLIC_URL}/PaperPicks.png`}\n        alt=\"PaperPicks Logo\"\n        htmlWidth=\"400\"\n        _hover={{cursor: \"pointer\"}}\n      />\n      <Spacer />\n      {LoginState ? (\n        <h1>{userName}</h1>\n      ) : (\n        <>\n          <Button\n            mb={3}\n            mx={5}\n            bg=\"white\"\n            borderRadius=\"0\"\n            _hover={{textDecoration: \"underline\"}}\n            onClick={() => dispatch(push(\"/sign_up\"))}\n          >新規登録</Button>\n          <Button\n            mb={3}\n            bg=\"#406B15\"\n            color=\"white\"\n            borderRadius=\"0\"\n            _hover={{opacity: 0.8}}\n            onClick={() => dispatch(push(\"/sign_in\"))}\n          >ログイン</Button>\n        </>\n      )}\n    </Flex>\n  )\n})","import { memo, ReactNode } from \"react\";\nimport { VFC } from \"react\";\n\nimport { Header } from \"../organisms/layout/Header\"\n\n\ntype Props = {\n  children: ReactNode;\n}\n\nexport const HeaderLayout: VFC<Props> = memo((props) => {\n  const { children } = props;\n\n  return (\n    <>\n      <Header />\n      {children}\n    </>\n  )\n})","import { Box, Flex, Heading, NumberDecrementStepper, NumberIncrementStepper, NumberInput, NumberInputField, NumberInputStepper, Text } from \"@chakra-ui/react\";\nimport { memo, VFC } from \"react\";\n\ntype Props = {\n  title: string,\n  maxW: number,\n  defaultV: number,\n  min: number,\n  max?: number\n}\n\nexport const SearchCondition: VFC<Props> = memo((props) => {\n  const { title, maxW, defaultV, min, max } = props;\n  return (\n    <Box mb=\"4\">\n      <Heading as=\"h3\" fontSize=\"md\" fontWeight=\"normal\">{title}</Heading>\n      <Flex>\n        <NumberInput\n          size=\"xs\"\n          maxW={maxW}\n          defaultValue={defaultV}\n          min={min}\n          max={max}\n        >\n          <NumberInputField borderRadius=\"none\" />\n          <NumberInputStepper>\n            <NumberIncrementStepper />\n            <NumberDecrementStepper />\n          </NumberInputStepper>\n        </NumberInput>\n        <Text ml=\"4\">~</Text>\n      </Flex>\n    </Box>\n  )\n})","import {Input, InputGroup, InputLeftElement, InputRightElement} from \"@chakra-ui/react\"\nimport { memo, VFC } from \"react\";\nimport { FaSearch, FaTimes } from \"react-icons/fa\";\n\n\nexport const SearchInput: VFC = memo(() => {\n  return (\n    <InputGroup>\n      <InputLeftElement\n        children={<FaSearch color=\"#EAEAEA\"/>}\n      />\n      <Input\n        w=\"60%\"\n        minW=\"880px\"\n        borderRadius=\"0\"\n        // focusBorderColor=\"#9AAE09\"\n      />\n      <InputRightElement\n        children={<FaTimes color=\"#EAEAEA\" />}\n      />\n    </InputGroup>\n  )\n})","import { Box, Center, Divider, Flex, Link, LinkBox, LinkOverlay, Text } from \"@chakra-ui/react\";\nimport { memo, VFC } from \"react\";\nimport { FaRegBookmark } from \"react-icons/fa\";\n\nimport { SearchCondition } from \"../molecules/searchCondition\";\nimport { SearchInput } from \"../molecules/searchInput\";\n\nexport const searchPaper: VFC = memo(() => {\n  const thisYear = new Date().getFullYear()\n\n  return (\n    <Center mt={16}>\n      <Box>\n        <SearchInput />\n        <Flex mt={8}>\n          <Box w=\"20%\" mr={16}>\n            <SearchCondition title=\"期間\" maxW={20} defaultV={thisYear - 10} min={1900} max={thisYear}/>\n            <SearchCondition title=\"引用数\" maxW={14} defaultV={0} min={0} />\n            <SearchCondition title=\"Pick数\" maxW={14} defaultV={0} min={0} />\n          </Box>\n          <Box w=\"80%\">\n            {[...Array(10)].map((i) => (\n              <Box key={i}>\n                <Link\n                  fontSize=\"lg\"\n                  fontWeight=\"bold\"\n                  color=\"#0055AA\"\n                  href=\"https://www.jstage.jst.go.jp/article/niraopinion/26/0/26_26/_article/-char/ja/\"\n                  isExternal\n                >\n                  ブロックチェーンは社会をどう変えるか\n                </Link>\n                <Text fontSize=\"sm\" mt=\"2\">\n                  抄録 ブロックチェーンは 「帳簿 (台帳) のイノベーション」 といわれる. この技術を使うことで,<br />\n                  モノやカネの取引記録を確実に保管し, 信頼のおける取引を効率的かつ迅速に,<br />\n                  国境を越えて実現することが可能となる. また, 政府もデータベースにある国民の個人情報を …\n                </Text>\n                <Flex align=\"center\">\n                  <Text fontSize=\"xs\" mt={1} color=\"#406B15\">\n                    論文太郎, 論文花子, 他3人・2015年・NIRAオピニオンペーパー\n                  </Text>\n                  <Text fontSize=\"xs\" mt={1} mx={3}>\n                    <Flex align=\"center\">\n                      <LinkBox>\n                        <Flex align=\"center\">\n                          <FaRegBookmark />\n                          <LinkOverlay href=\"#\" ml={0.5} _hover={{textDecoration: \"underline\"}}>Pick数: 10</LinkOverlay>\n                        </Flex>\n                      </LinkBox>\n                      <Text mx={2}>引用数: 10</Text>\n                      <Link\n                        href=\"//twitter.com/share\"\n                        className=\"twitter-share-button\"\n                        data-text=\"ブロックチェーンは社会をどう変えるか\"\n                        data-hashtags=\"PaperPicks\"\n                        data-url=\"https://www.jstage.jst.go.jp/article/niraopinion/26/0/26_26/_article/-char/ja/\"\n                        data-lang=\"ja\"\n                      >ツイート</Link>\n                    </Flex>\n                  </Text>\n                </Flex>\n                <Divider my=\"4\"/>\n              </Box>\n            ))}\n          </Box>\n        </Flex>\n      </Box>\n    </Center>\n  )\n})","import { memo } from \"react\"\nimport { Divider, Flex, Text } from \"@chakra-ui/react\"\n\nexport const DivideLineSocialButton = memo(() => {\n  return (\n    <Flex my=\"2\">\n      <Divider my=\"4\" />\n      <Text mx=\"4\" my=\"1\">or</Text>\n      <Divider my =\"4\" />\n    </Flex>\n  )\n})","import { memo } from \"react\"\nimport { Button } from \"@chakra-ui/react\"\nimport { FaTwitter } from \"react-icons/fa\"\n\nexport const TwitterButton = memo(() => {\n  return (\n    <Button\n      mx=\"4\"\n      colorScheme=\"twitter\"\n      borderRadius=\"0\"\n      size=\"sm\"\n      leftIcon={<FaTwitter />}\n    >Sign Up with Twitter</Button>\n  )\n})","import \"firebase/auth\";\nimport \"firebase/firebase-firestore\";\n\nimport firebase from \"firebase\";\n\n// Firebaseの接続情報をconfigオブジェクトに保持\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  // databaseURL: process.env.REACT_APP_DATABASEURL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n// Authサービスを作ってエクスポート。各画面でこれを利用する\nconst auth = firebase.auth();\nexport default auth;","import { useToast } from \"@chakra-ui/react\";\nimport { useCallback } from \"react\";\n\ntype Props = {\n  title: string,\n  status: \"info\" | \"warning\" | \"success\" | \"error\",\n}\n\nexport const useMessage = () => {\n  const toast = useToast();\n  const showMessage = useCallback((props: Props) => {\n    const {title, status} = props;\n    toast({\n      title,\n      status,\n      duration: 3000,\n      isClosable: true,\n      position: \"top\"\n    })\n  }, [toast])\n  return { showMessage }\n}","import { Users } from \"./ActionType\";\n\nexport const SIGN_UP = \"SIGN_UP\";\nexport const signUpAction = (userState: Omit<Users, \"isSignedIn\">) => {\n  return {\n    type: \"SIGN_UP\",\n    payload: {\n      isSignedIn: true,\n      id: userState.id,\n      username: userState.username,\n      email: userState.email,\n      password: userState.password\n    }\n  }\n};\n\nexport const SIGN_IN = \"SIGN_IN\";\nexport const signInAction = (userState: Omit<Users, \"isSignedIn\">) => {\n  return {\n    type: \"SIGN_UP\",\n    payload: {\n      isSignedIn: true,\n      id: userState.id,\n      username: userState.username,\n      email: userState.email,\n      password: userState.password\n    }\n  }\n};\n\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const signOutAction = () => {\n  return {\n    type: \"SIGN_OUT\",\n    payload: {\n      isSignedIn: false,\n      id: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    }\n  }\n};","import { push } from \"connected-react-router\";\nimport { Dispatch } from \"redux\";\n\nimport { signInAction, signUpAction } from \"./Action\";\nimport { Users } from \"./ActionType\";\n\nexport const signUp = (signUpData: Omit<Users, \"isSignedIn\" | \"id\">) => {\n  return async (dispatch: Dispatch<any>, getState: any) => {\n    const state = getState();\n    const isSignedIn = state.users.isSignedIn;\n    const { username, email, password } = signUpData;\n\n    if (!isSignedIn) {\n      dispatch(signUpAction({\n        id: 1,\n        username,\n        email,\n        password\n      }))\n      dispatch(push(\"/\"))\n    }\n  }\n}\n\nexport const signIn = (signInData: Omit<Users, \"isSignedIn\" | \"id\">) => {\n  return async (dispatch: Dispatch<any>, getState: any) => {\n    const state = getState();\n    const isSignedIn = state.users.isSignedIn;\n    const { username, email, password } = signInData;\n\n    if (!isSignedIn) {\n      dispatch(signInAction({\n        id: 1,\n        username,\n        email,\n        password\n      }))\n      dispatch(push(\"/\"))\n    }\n  }\n}","import { Box, Button, FormControl, FormLabel, Input, InputGroup, InputRightElement, Stack, Text } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { memo, VFC } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\nimport auth from \"../../../firebase\";\n\nimport { useMessage } from \"../../../hooks/useMessage\";\nimport { signIn } from \"../../../redux/users/Operations\";\n\ntype IFormInput = {\n  email: string;\n  password: string;\n}\n\nexport const LoginInput: VFC = memo(() => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const { formState: { errors }, register, handleSubmit } = useForm<IFormInput>();\n  const { showMessage } = useMessage();\n　const dispatch = useDispatch();\n\n  const onSubmit = async (data: IFormInput) => {\n    try {\n      await auth.signInWithEmailAndPassword(data.email, data.password)\n      dispatch(signIn({username: \"username\", email: data.email, password: data.password}))\n      showMessage({title: \"正常にログインできました。\", status: \"success\"});\n    } catch (error) {\n      alert(error.message)\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Stack>\n        <FormControl isRequired>\n          <FormLabel>メールアドレス</FormLabel>\n          <Input\n            placeholder={\"メールアドレスを入力してください\"}\n            size=\"lg\"\n            borderRadius=\"0\"\n            {...register(\"email\", {\n              required: \"メールアドレスは必須です。\",\n              pattern: {\n                value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: \"メールアドレス形式で入力してください。\",\n              },\n            })}\n          />\n          {\n            errors.email && errors.email.type === \"required\" ?\n            <Text fontSize=\"xs\" color=\"red.500\">※メールアドレスは必須です。</Text> : errors.email && errors.email.message === \"メールアドレス形式で入力してください。\" ?\n            <Text fontSize=\"xs\" color=\"red.500\">※メールアドレス形式で入力してください。</Text> :<Box h=\"1rem\"></Box>\n          }\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel>パスワード</FormLabel>\n          <InputGroup>\n            <Input\n              placeholder={\"パスワードを入力してください\"}\n              size=\"lg\"\n              type={showPassword ? \"text\" : \"password\"}\n              borderRadius=\"0\"\n              {...register(\"password\", {\n                required: true\n              })}\n            />\n            <InputRightElement\n              my={1}\n              onClick={() => setShowPassword(!showPassword)}\n              children={showPassword ? <FaEye /> : <FaEyeSlash />}\n            />\n          </InputGroup>\n          {errors.password ? <Text fontSize=\"xs\" color=\"red.500\">※パスワードは必須です。</Text> : <Box h=\"1rem\"></Box>}\n        </FormControl>\n      </Stack>\n      <Button\n        mt=\"3\"\n        bg=\"#406B15\"\n        color=\"white\"\n        type=\"submit\"\n        borderRadius=\"0\"\n        _hover={{opacity: 0.8}}\n        isFullWidth\n      >ログイン</Button>\n    </form>\n  )\n})","import { Box, Center, Flex, Heading } from \"@chakra-ui/react\"\nimport { memo, VFC } from \"react\"\n\nimport { DivideLineSocialButton } from \"../atoms/divideLineSocialButton\"\nimport { TwitterButton } from \"../atoms/twitterButton\"\nimport { LoginInput } from \"../organisms/user/loginInput\"\n\n\nexport const UserLogin: VFC = memo(() => {\n  return (\n    <Flex align=\"center\" justify=\"center\" h=\"calc(100vh - 134.109px)\">\n      <Box w=\"600px\" border=\"1px\" borderColor=\"gray.200\" p=\"4\">\n        <Center>\n          <Heading as=\"h1\" size=\"lg\" my=\"4\">ログイン</Heading>\n        </Center>\n        <Box mx=\"10\">\n          <LoginInput />\n          <DivideLineSocialButton />\n        </Box>\n        <Flex justify=\"center\">\n          <TwitterButton />\n        </Flex>\n      </Box>\n    </Flex>\n  )\n})","import { Box, Button, FormControl, FormLabel, Input, InputGroup, InputRightElement, Stack, Text } from \"@chakra-ui/react\";\nimport { memo, useState, VFC } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\n\nimport auth from \"../../../firebase\";\nimport { useMessage } from \"../../../hooks/useMessage\";\nimport { signUp } from \"../../../redux/users/Operations\";\n\ntype IFormInput = {\n  userName: string;\n  email: string;\n  password: string;\n  passwordConf: string;\n}\n\nexport const RegistrationInput: VFC = memo(() => {\n  const [showPass, setShowPass] = useState(false)\n  const [showPassConf, setShowPassConf] = useState(false)\n\n  const { formState: { errors }, register, handleSubmit } = useForm<IFormInput>();\n  const { showMessage } = useMessage();\n  const dispatch = useDispatch();\n\n  const onSubmit = async (data: IFormInput) => {\n    if (data.password === data.passwordConf) {\n      try {\n        // Firebaseにユーザーを作成する\n        await auth.createUserWithEmailAndPassword(data.email, data.password);\n        // sendSignInLinkToEmail() を利用すると、メールアドレス認証のためのメールを送信することも可能\n        dispatch(signUp({username: data.userName, email: data.email, password: data.password}));\n        showMessage({title: \"正常に登録できました。\", status: \"success\"});\n\n      } catch (error) {\n        // ユーザー作成が失敗するとその内容をアラート表示\n        alert(error.message);\n      }\n    } else {\n      showMessage({title: \"パスワードとパスワード（確認用）が異なります。\", status: \"error\"});\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Stack>\n        <FormControl isRequired>\n          <FormLabel>ユーザー名</FormLabel>\n          <Input\n            placeholder={\"ユーザー名を入力してください\"}\n            size=\"lg\"\n            borderRadius=\"0\"\n            {...register(\"userName\", {\n              required: true\n            })}\n          />\n          {errors.userName ? <Text fontSize=\"xs\" color=\"red.500\">※ユーザー名は必須です。</Text> : <Box h=\"1rem\"></Box>}\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel>メールアドレス</FormLabel>\n          <Input\n            placeholder={\"メールアドレスを入力してください\"}\n            size=\"lg\"\n            borderRadius=\"0\"\n            {...register(\"email\", {\n              required: \"メールアドレスは必須です。\",\n              pattern: {\n                value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: \"メールアドレス形式で入力してください。\",\n              },\n            })}\n          />\n          {\n            errors.email && errors.email.type === \"required\" ?\n            <Text fontSize=\"xs\" color=\"red.500\">※メールアドレスは必須です。</Text> : errors.email && errors.email.message === \"メールアドレス形式で入力してください。\" ?\n            <Text fontSize=\"xs\" color=\"red.500\">※メールアドレス形式で入力してください。</Text> :<Box h=\"1rem\"></Box>\n          }\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel>パスワード</FormLabel>\n          <InputGroup>\n            <Input\n              placeholder={\"パスワードを入力してください\"}\n              size=\"lg\"\n              type={showPass ? \"text\" : \"password\"}\n              borderRadius=\"0\"\n              {...register(\"password\", {\n                required: true\n              })}\n            />\n            <InputRightElement\n              my={1}\n              onClick={() => setShowPass(!showPass)}\n              children={showPass ? <FaEye /> : <FaEyeSlash />}\n            />\n          </InputGroup>\n          {errors.password ? <Text fontSize=\"xs\" color=\"red.500\">※パスワードは必須です。</Text> : <Box h=\"1rem\"></Box>}\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel>パスワード（確認用）</FormLabel>\n          <InputGroup>\n            <Input\n              placeholder={\"パスワード（確認用）を入力してください\"}\n              size=\"lg\"\n              type={showPassConf ? \"text\" : \"password\"}\n              borderRadius=\"0\"\n              {...register(\"passwordConf\", {\n                required: true\n              })}\n            />\n            <InputRightElement\n              my={1}\n              onClick={() => setShowPassConf(!showPassConf)}\n              children={showPassConf ? <FaEye /> : <FaEyeSlash />}\n            />\n          </InputGroup>\n          {errors.passwordConf ? <Text fontSize=\"xs\" color=\"red.500\">※パスワード（確認用）は必須です。</Text> : <Box h=\"1rem\"></Box>}\n        </FormControl>\n      </Stack>\n      <Button\n        mt=\"3\"\n        bg=\"#406B15\"\n        color=\"white\"\n        type=\"submit\"\n        borderRadius=\"0\"\n        _hover={{opacity: 0.8}}\n        isFullWidth\n      >登録</Button>\n    </form>\n  )\n})","import { VFC } from \"react\";\nimport { Box, Center, Divider, Flex, Heading, Text} from \"@chakra-ui/react\";\n\nimport { RegistrationInput } from \"../organisms/user/registrationInput\";\nimport { TwitterButton } from \"../atoms/twitterButton\";\n\nexport const UserRegistration: VFC = () =>{\n  return (\n    <Flex align=\"center\" justify=\"center\" h=\"calc(100vh - 134.109px)\">\n      <Box w=\"600px\" border=\"1px\" borderColor=\"gray.200\" p=\"4\">\n        <Center>\n          <Heading as=\"h1\" size=\"lg\" my=\"4\">新規登録</Heading>\n        </Center>\n        <Box mx=\"10\">\n          <RegistrationInput />\n          <Flex my=\"2\">\n            <Divider my=\"4\" />\n            <Text mx=\"4\" my=\"1\">or</Text>\n            <Divider my =\"4\" />\n          </Flex>\n        </Box>\n        <Flex justify=\"center\">\n          <TwitterButton />\n        </Flex>\n      </Box>\n    </Flex>\n  )\n}","import { memo, VFC } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { searchPaper } from \"../pages/searchPaper\";\nimport { UserLogin } from \"../pages/UserLogin\";\nimport { UserRegistration } from \"../pages/UserRegistration\";\n\nexport const Router: VFC = memo(() => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={searchPaper} />\n      <Route exact path=\"/sign_up\" component={UserRegistration} />\n      <Route exact path=\"/sign_in\" component={UserLogin} />\n    </Switch>\n  )\n})","import { ChakraProvider } from \"@chakra-ui/react\";\n\nimport theme from './theme/theme';\nimport { HeaderLayout } from './components/templates/HeaderLayout';\nimport { Router } from './components/router/Router';\n\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <HeaderLayout>\n        <Router />\n      </HeaderLayout>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","export const initialState = {\n  users: {\n    isSignedIn: false,\n    id: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  }\n}","import * as Actions from \"./Action\"\nimport { initialState } from \"../store/InitialState\"\nimport { Action } from \"./ActionType\"\n\nexport const UsersReducer = (state = initialState.users, action: Action) => {\n  switch (action.type) {\n    case Actions.SIGN_UP:\n      return {\n        ...state,\n        ...action.payload\n      }\n    case Actions.SIGN_IN:\n      return {\n        ...state,\n        ...action.payload\n      }\n      case Actions.SIGN_OUT:\n        return {\n          ...state,\n          ...action.payload\n        }\n    default:\n      return state\n  }\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport * as History from 'history'\n\nimport './index.css';\nimport App from './App';\nimport createStore from './redux/store/Store';\n\nconst history = History.createBrowserHistory();\nexport const store = createStore(history);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","import {\n  createStore as reduxCreateStore,\n  combineReducers,\n  applyMiddleware\n} from \"redux\"\nimport { connectRouter, routerMiddleware } from \"connected-react-router\"\nimport thunk from \"redux-thunk\"\nimport { History } from \"history\"\n\nimport { UsersReducer } from \"../users/Reducers\"\n\nexport default function createStore(history: History) {\n  return reduxCreateStore(\n    combineReducers({\n      router: connectRouter(history),\n      users: UsersReducer\n    }),\n    applyMiddleware(\n      routerMiddleware(history),\n      thunk\n    )\n  )\n}"],"sourceRoot":""}